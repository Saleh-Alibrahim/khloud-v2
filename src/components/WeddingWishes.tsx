import { useEffect, useRef, useState } from 'react';

const WeddingWishes = () => {
  const audioRef = useRef<HTMLAudioElement>(null);
  const [musicPlaying, setMusicPlaying] = useState(false);
  const [showPlayOverlay, setShowPlayOverlay] = useState(true);
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [password, setPassword] = useState('');
  const [passwordError, setPasswordError] = useState(false);
  const [visibleParagraphs, setVisibleParagraphs] = useState<Set<number>>(new Set());
  const paragraphRefs = useRef<(HTMLParagraphElement | null)[]>([]);

  const startMusic = async () => {
    if (audioRef.current && !musicPlaying) {
      try {
        // Set volume
        audioRef.current.volume = 0.5;
        // Reset to beginning
        audioRef.current.currentTime = 0;
        // Play the audio
        await audioRef.current.play();
        setMusicPlaying(true);
        setShowPlayOverlay(false);
      } catch (error) {
        console.log('Playback failed:', error);
      }
    }
  };

  const stopMusic = () => {
    if (audioRef.current && musicPlaying) {
      audioRef.current.pause();
      audioRef.current.currentTime = 0;
      setMusicPlaying(false);
      setShowPlayOverlay(true);
    }
  };

  const handlePlayClick = (e: React.MouseEvent) => {
    e.stopPropagation();
    startMusic();
  };

  const handlePasswordSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (password.toLowerCase() === 'saleh2' || password === 'ุตุงูุญ2') {
      setIsAuthenticated(true);
      setPasswordError(false);
    } else {
      setPasswordError(true);
      setPassword('');
    }
  };

  useEffect(() => {
    // Try autoplay on desktop
    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

    if (!isIOS && !isMobile) {
      const timer = setTimeout(() => {
        startMusic();
      }, 500);
      return () => clearTimeout(timer);
    }
  }, []);

  useEffect(() => {
    // Set up intersection observer for scroll animations
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const index = paragraphRefs.current.indexOf(entry.target as HTMLParagraphElement);
            if (index !== -1 && !visibleParagraphs.has(index)) {
              // Staggered delay - each line appears 2 seconds after the previous one
              setTimeout(() => {
                setVisibleParagraphs((prev) => new Set(prev).add(index));
              }, index * 2000);
            }
          }
        });
      },
      { threshold: 0.05, rootMargin: '0px 0px -50px 0px' }
    );

    paragraphRefs.current.forEach((ref) => {
      if (ref) observer.observe(ref);
    });

    return () => {
      paragraphRefs.current.forEach((ref) => {
        if (ref) observer.unobserve(ref);
      });
    };
  }, [isAuthenticated, visibleParagraphs]);

  const arabicText = `ุฎููุฏ ุญุจูุจุชูุ ูู ูุญุธุฉ ูุนู ุงูุขู ูู ููุฒ ุฃุญุชูุธ ููู ุจููุจูุ ูุฃูู ุฃุนุฑู ูููุฉ ุงูููุช ุงููู ุนูุฏูุง.

ุฃุญุจู ุงูููู ุฃูุซุฑ ูู ุฃูุณุ ูุฃุนูุด ูู ููู ูุนู ูุฃูู ูุฏูุฉ ุซูููุฉ ูุง ุฃุจู ุฃุถูุนูุง. ูุฌูุฏู ุจุญูุงุชู ุงูุขู ูู ุฃุฌูู ุดู ุญุงุตู ูู.

ูุนูุ ุฃุนุฑู ุฅู ุงูุธุฑูู ูุฏ ุชูุฑููุง ูููุงู ูุงุ ูุฅู ุทุฑูููุง ูุง ุฑุงุญ ูููู ููุฃุจุฏ. ุจุณ ูุฐุง ูุฎูููู ุฃูุฏุฑ ูู ุซุงููุฉุ ูู ุงุจุชุณุงูุฉุ ูู ููุณุฉ.

ุนูููู ุงููู ุฃุดูููุง ูู ูููุ ุถุญูุชู ุงููู ุชููุฃ ููุจู ูุฑุญุ ุตูุชู ุงููู ูุทููู... ูููุง ูุญุธุงุช ุฃุฎุฒููุง ุจุฐุงูุฑุชู ููุฃูุงู ุงูุฌุงูุฉ.

ุฃุญุจู ุฑุบู ูุนุฑูุชู ุจุงูููุงูุฉุ ุฃู ุฑุจูุง ุฃุญุจู ุฃูุซุฑ ุจุณุจุจูุง. ูุฃู ุงูุญุจ ุงูุญูููู ูุง ูุญุชุงุฌ ูุนูุฏ ุจุงูุฃุจุฏูุฉ ุนุดุงู ูููู ุตุงุฏู.

ูู ููู ุฃุตุญู ููู ูุฅูุชู ุจุญูุงุชูุ ุฃุดูุฑ ุงููู ุนูู ูุฐู ุงููุนูุฉ. ููู ูููุฉ ุฃูุงู ูุฃูุง ุฃุฏุนู ุฅู ุงูููุช ููุดู ุจุทูุก.

ุฃุนุฑู ุฅูู ูุง ุฑุงุญ ุฃูุฏุฑ ุฃุนุทูู "ููุฃุจุฏ" ุงููู ุชุณุชุญููููุ ุจุณ ุฃูุฏุฑ ุฃุนุทูู ูู ุญุจู ูู "ุงูุขู" ุงููู ุนูุฏูุง.

ุณุงูุญููู ูู ุงูุขู ุนูู ุงููุฏุงุน ุงููู ุฑุงุญ ูุฌูุ ูุนูู ุงูุฏููุน ุงููู ูุง ุฑุงุญ ุฃูุฏุฑ ุฃูุณุญูุงุ ูุนูู ุงููุณุชูุจู ุงููู ูุง ุฑุงุญ ูุนูุดู ุณูุง.

ุจุณ ุงุนุฑูู ุฅู ูุฐุง ุงูุญุจุ ุญุชู ูู ูุงู ูุคูุช ุจุงูุฃูุงูุ ุฑุงุญ ูููู ุฃุจุฏู ุจููุจู. ูุฅูุชู ุฑุงุญ ุชููููู ุฏุงุฆูุงู ุฃุตุฏู ุญุจ ุนุฑูุชู.

ุฃุญุจู ุงูุขูุ ูุฑุงุญ ุฃุญุจู ุจูุฑุฉุ ูุฑุงุญ ุฃุณุชูุฑ ุฃุญุจู ุญุชู ุจุนุฏ ูุง ุชูุฑููุง ุงูุญูุงุฉ. ูุฃู ุจุนุถ ุงููุงุณ ูุชุฑููู ุฃุซุฑ ูุง ูููุญู ๐น`;

  // Show password screen if not authenticated
  if (!isAuthenticated) {
    return (
      <div className="celebration-bg min-h-screen flex items-center justify-center p-4">
        <div className="wedding-card max-w-md w-full relative z-10 animate-in fade-in-0 zoom-in-95 duration-1000">
          <div className="text-center">
            <h1 className="text-3xl sm:text-4xl font-bold text-primary mb-8">
              ุฑุณุงูุฉ ุฎุงุตุฉ
            </h1>
            <p className="text-lg text-foreground/80 mb-6">
              ูุฐู ุงูุฑุณุงูุฉ ูุญููุฉ ุจูููุฉ ุณุฑ
            </p>
            <form onSubmit={handlePasswordSubmit} className="space-y-4">
              <input
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                placeholder="ุฃุฏุฎู ูููุฉ ุงูุณุฑ..."
                className="w-full px-4 py-3 rounded-lg border border-rose-gold/30 bg-white/80 backdrop-blur-sm text-center text-lg focus:outline-none focus:border-primary transition-colors"
                autoFocus
              />
              {passwordError && (
                <p className="text-red-500 text-sm animate-in fade-in-0 duration-300">
                  ูููุฉ ุงูุณุฑ ุบูุฑ ุตุญูุญุฉุ ุญุงูู ูุฑุฉ ุฃุฎุฑู
                </p>
              )}
              <button
                type="submit"
                className="w-full bg-primary hover:bg-primary/90 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105"
              >
                ุฏุฎูู
              </button>
            </form>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="celebration-bg relative min-h-screen overflow-y-auto">
      {/* Background decorative elements */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        {/* Floating hearts */}
        <div className="absolute top-10 sm:top-20 left-5 sm:left-10 text-3xl sm:text-6xl text-rose-gold/30 float-animation">๐</div>
        <div className="absolute top-20 sm:top-32 right-5 sm:right-20 text-2xl sm:text-4xl text-blush-pink/40 float-animation" style={{ animationDelay: '1s' }}>๐ธ</div>
        <div className="absolute bottom-20 sm:bottom-32 left-5 sm:left-20 text-3xl sm:text-5xl text-champagne/30 float-animation" style={{ animationDelay: '2s' }}>โจ</div>
        <div className="absolute bottom-10 sm:bottom-20 right-5 sm:right-10 text-2xl sm:text-3xl text-accent/40 float-animation" style={{ animationDelay: '3s' }}>๐</div>
        <div className="absolute top-1/2 left-2 sm:left-5 text-2xl sm:text-4xl text-rose-gold/25 float-animation" style={{ animationDelay: '4s' }}>๐</div>
        <div className="absolute top-1/4 right-2 sm:right-5 text-3xl sm:text-5xl text-primary/30 float-animation" style={{ animationDelay: '1.5s' }}>๐</div>

        {/* Additional sparkles */}
        <div className="absolute top-40 left-1/4 text-2xl text-secondary/50 sparkle">โจ</div>
        <div className="absolute bottom-40 right-1/3 text-3xl text-accent/40 sparkle" style={{ animationDelay: '2.5s' }}>โญ</div>
        <div className="absolute top-2/3 left-1/3 text-2xl text-rose-gold/40 sparkle" style={{ animationDelay: '1.8s' }}>๐ซ</div>
      </div>

      {/* Main content card */}
      <div className="wedding-card max-w-6xl w-full relative z-10 mx-auto px-4 sm:px-8 py-8 sm:py-12">
        <div className="text-center mb-8 sm:mb-12">
          <h1 className="text-3xl sm:text-5xl md:text-6xl lg:text-7xl font-bold glow-text text-primary mb-4 sm:mb-6 float-animation">
            ๐น ุญุจูุจุชู ุฎููุฏ ๐น
          </h1>
          <div className="w-32 sm:w-48 h-1 bg-gradient-to-r from-rose-gold to-primary mx-auto rounded-full"></div>
        </div>

        <div className="arabic-text text-center space-y-6 sm:space-y-8 md:space-y-10 text-lg sm:text-xl md:text-2xl lg:text-3xl leading-relaxed text-foreground/90 max-w-5xl mx-auto">
          {arabicText.split('\n\n').map((paragraph, index) => (
            <p
              key={index}
              ref={(el) => (paragraphRefs.current[index] = el)}
              className={`transition-all duration-[2500ms] ease-in-out transform ${
                visibleParagraphs.has(index)
                  ? 'opacity-100 translate-y-0 scale-100'
                  : 'opacity-0 translate-y-16 scale-90'
              } ${paragraph.includes('๐น') ? 'text-xl sm:text-2xl md:text-3xl lg:text-4xl font-semibold text-primary glow-text' : ''}`}
            >
              {paragraph}
            </p>
          ))}
        </div>

        {/* Decorative bottom with more spacing */}
        <div className="flex justify-center items-center mt-12 sm:mt-16 space-x-4 rtl:space-x-reverse mb-8">
          <div className="w-16 sm:w-24 h-0.5 bg-gradient-to-r from-transparent to-rose-gold"></div>
          <div className="text-3xl sm:text-5xl text-primary animate-pulse">๐</div>
          <div className="w-16 sm:w-24 h-0.5 bg-gradient-to-l from-transparent to-rose-gold"></div>
        </div>
      </div>

      {/* Play overlay for mobile */}
      {showPlayOverlay && (
        <div className="fixed inset-0 z-40 bg-black/50 backdrop-blur-sm flex items-center justify-center animate-in fade-in-0 duration-500">
          <button
            onClick={handlePlayClick}
            className="bg-white/95 backdrop-blur-sm px-8 py-6 rounded-3xl shadow-2xl hover:bg-white transition-all duration-300 transform hover:scale-105"
          >
            <div className="flex flex-col items-center gap-3">
              <div className="text-6xl animate-pulse">๐ต</div>
              <p className="text-lg font-semibold text-primary">ุฎููุฏ ุงุถุบุทู ููุง</p>
            </div>
          </button>
        </div>
      )}

      {/* Music control button */}
      {musicPlaying && (
        <button
          onClick={stopMusic}
          className="fixed bottom-4 right-4 sm:bottom-6 sm:right-6 z-20 bg-primary/80 backdrop-blur-sm text-white p-2 sm:p-3 rounded-full shadow-lg hover:bg-primary transition-all duration-300"
          title="ุฅููุงู ุงูููุณููู"
        >
          ๐ถ
        </button>
      )}

      {/* Hidden Audio Element */}
      <audio
        ref={audioRef}
        loop
        preload="auto"
        playsInline
      >
        {/* Local wedding song - ููุง ุฃุญูู ูู ุงูุฏููุง */}
        <source src="/song.mp3" type="audio/mpeg" />
      </audio>
    </div>
  );
};

export default WeddingWishes;